# Week 2: Data Exploration & Preprocessing


#----- Importing libraries

import numpy as np # array-processing package
import pandas as pd # data analysis toolkit
import matplotlib.pyplot as plt # static, animated and interactive visualizations
import seaborn as sns # data visualization library
import pprint # data pretty printer


#----- Loading the datasets

# Note: The datasets were saved as CSV UTF-8 files; sep or delimiter
imbd_movies = pd.read_csv(r'C:/Users\Asus\Desktop/mestrado/projeto_integrado_matematica_computacao/Projeto-RecSys/exploracao_jessica\datasets/imdb_movies.csv', encoding = 'UTF-8', sep = ';') 
imbd_ratings = pd.read_csv(r'C:/Users\Asus\Desktop/mestrado/projeto_integrado_matematica_computacao/Projeto-RecSys/exploracao_jessica\datasets/imdb_ratings.csv', encoding = 'UTF-8', sep = ';')

# Note: .head() doesn't print automatically in the terminal, unless we use e.g. Jupiter Notebook
#print(imbd_movies.head())
#print(imbd_ratings.head())

#imbd_movies.info()
#print('-----------------------------------')
#imbd_ratings.info()


#----- Merging the datasets

# Note: inner join returns matching values in both tables
imbd_merged = pd.merge(imbd_movies, imbd_ratings, how = "inner", on = "imdb_title_id")
#print(imbd_merged.head())

#print(f"Colunas: {list(imbd_merged.columns)}")
#print(len(imbd_merged.columns))


#----- Missing values

missing = imbd_merged.isnull().sum()
#print(missing)

# or

#print('---------------------------------------')
missing_table = pd.DataFrame({'Columns': missing.index, 'Missing values': missing.values})
#print(missing_table)


#----- Dropping columns

size = len(imbd_merged)

# Note: inplace = True modifies the original DataFrame; 10 columns were dropped
for column in imbd_merged.columns:
    if imbd_merged[column].isnull().sum() > 0.5*size:
        imbd_merged.drop(columns = [column], inplace = True)

#print(f"Colunas restantes: {list(imbd_merged.columns)}")
#print(len(imbd_merged.columns))


#----- Processing missing values -------------- IN PROGRESS
# TASK: Fill missing values

missing_values_list = [(col, int(imbd_merged[col].isnull().sum())) for col in imbd_merged.columns]

#for col, missing in missing_values_list:
#    print(f"{col}: {missing}")


#----- Data visualization

# Barplot with genres

# Note: the genres are separated by commas; .explode() splits the elements into new rows
genres_30 = imbd_merged['genre'].str.split(',').explode().value_counts().head(30)
#print(genres)

barplot_genres = sns.barplot(x = genres_30.values, y = genres_30.index) 
plt.title('Count of Genres')
plt.xlabel('Count')
plt.ylabel('Genre')
#plt.show()

# Pie chart with countries

countries_10 = imbd_merged['country'].value_counts().head(10)
#print(countries_10)

# Note: equal ensures that pie chart is drawn as a circle;
# %1.1f displays a decimal number with 1 decimal place; %% displays the % symbol
plt.figure(figsize = (10, 6))
plt.pie(countries_10, labels = countries_10.index, autopct = '%1.1f%%')
plt.title('Count of Countries')
plt.axis('equal')  
plt.tight_layout()
#plt.show() 


#----- TO DO -------------
#----- Fill missing values
